Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/un-og-training-dev/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/share/miniconda3/envs/un-og-training-dev/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda3/envs/un-og-training-dev/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/share/miniconda3/envs/un-og-training-dev/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/share/miniconda3/envs/un-og-training-dev/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda3/envs/un-og-training-dev/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda3/envs/un-og-training-dev/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import ogcore.output_tables as ot
from io import BytesIO
import pickle
# import cloudpickle
import requests
path_dict = {
    "TPI": [
        "https://github.com/PSLmodels/OG-Core/blob/master/tests/test_io_data/TPI_vars_baseline.pkl?raw=true",
        "https://github.com/PSLmodels/OG-Core/blob/master/tests/test_io_data/TPI_vars_reform.pkl?raw=true"
            ],
    "Params": [
        "https://github.com/PSLmodels/OG-Core/blob/master/tests/test_io_data/model_params_baseline.pkl?raw=true",
        "https://github.com/PSLmodels/OG-Core/blob/master/tests/test_io_data/model_params_reform.pkl?raw=true"

    ]
}
output_dict = {
    "TPI": [],
    "Params": []
}
for key in path_dict.keys():
    for path in path_dict[key]:
        r = requests.get(path)
        output_dict[key].append(pickle.loads(BytesIO(r.content).getvalue()))
# make table
table = ot.macro_table(output_dict["TPI"][0], output_dict["Params"][0], output_dict["TPI"][1], output_dict["Params"][1], output_type="pct_diff", num_years=10, start_year= output_dict["Params"][0].start_year)
glue(table.to_markdown())
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[1], line 27[0m
[1;32m     25[0m [38;5;66;03m# make table[39;00m
[1;32m     26[0m table [38;5;241m=[39m ot[38;5;241m.[39mmacro_table(output_dict[[38;5;124m"[39m[38;5;124mTPI[39m[38;5;124m"[39m][[38;5;241m0[39m], output_dict[[38;5;124m"[39m[38;5;124mParams[39m[38;5;124m"[39m][[38;5;241m0[39m], output_dict[[38;5;124m"[39m[38;5;124mTPI[39m[38;5;124m"[39m][[38;5;241m1[39m], output_dict[[38;5;124m"[39m[38;5;124mParams[39m[38;5;124m"[39m][[38;5;241m1[39m], output_type[38;5;241m=[39m[38;5;124m"[39m[38;5;124mpct_diff[39m[38;5;124m"[39m, num_years[38;5;241m=[39m[38;5;241m10[39m, start_year[38;5;241m=[39m output_dict[[38;5;124m"[39m[38;5;124mParams[39m[38;5;124m"[39m][[38;5;241m0[39m][38;5;241m.[39mstart_year)
[0;32m---> 27[0m [43mglue[49m(table[38;5;241m.[39mto_markdown())

[0;31mNameError[0m: name 'glue' is not defined

